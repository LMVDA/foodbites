@model Domain.Petisco.Estabelecimento

@{
    ViewBag.Title = "Criar Estabelecimento";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Criar Estabelecimento</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Estabelecimento</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)
	
        <div class="form-group">
            @Html.LabelFor(model => model.Nome, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Nome, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Nome, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Telefone, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Telefone, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Telefone, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Localizacao.Latitude, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Localizacao.Latitude, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Localizacao.Latitude, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Localizacao.Longitude, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Localizacao.Longitude, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Localizacao.Longitude, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Horarios, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
				<table align="left" cellpadding="10">
				    @foreach (var horario in Model.Horarios)
                    {
                        @Html.EditorFor(model => horario, "HorarioFuncionamento", $"Horarios[{(int)horario.Dia}]".ToString(), new { Name = "hello", htmlAttributes = new { @style="display:inline;" , @class = "form-control" }, Escolhido = false })
                    }
				
	                @Html.ValidationMessageFor(model => model.Horarios, "", new { @class = "text-danger" })
				</table>
            </div>
        </div>

	    <div class="form-group">
            @Html.LabelFor(model => model.Criticas, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @for(int i = 0; i < Model.Criticas.Count; i++)
                {
                    @Html.EditorFor(model => model.Criticas[i], new { htmlAttributes = new { @class = "form-control" } })
                    <br/>
                }
                @Html.ValidationMessageFor(model => model.Criticas, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Criar" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Voltar", "Index")
</div>